(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{wg:()=>b,xA:()=>d,Cs:()=>v,C_:()=>n,iu:()=>r,yk:()=>l,CW:()=>i,oW:()=>o,bj:()=>h,O9:()=>p,ON:()=>_,N_:()=>u,Ht:()=>a,qj:()=>m,f:()=>g,Ph:()=>f,t1:()=>s,Ag:()=>c,ZQ:()=>y});var n={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_invalid",inputErrorClass:"form__input-border-error",errorClass:"form__input"},r=document.querySelector('.form[name = "formRedactAvatar"]'),o=document.querySelector('.form[name = "formRedactProfile"]'),i=document.querySelector('.form[name = "formNewCard"]'),a=document.querySelector(".popup_delete"),u=document.querySelector(".popup_avatar"),c=document.querySelector(".profile__title"),s=document.querySelector(".profile__subtitle"),l=document.querySelector(".profile__edit-button"),f=document.querySelector(".popup_profile"),p=document.querySelector(".form__input_type_name"),h=document.querySelector(".form__input_type_role"),d=document.querySelector(".profile__vector-button"),_=document.querySelector(".popup_images"),y=document.querySelector(".elements"),m=document.querySelector(".popup_img"),v="#tmplt",b=document.querySelector(".form__input_type_avatar"),g=document.querySelector(".profile__jack");function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._configValidation=t,this._formSelector=n}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._formSelector.addEventListener("submit",(function(e){e.preventDefault()})),this._handleFormInput()}},{key:"_handleFormInput",value:function(){var e=this;this._inputList=Array.from(this._formSelector.querySelectorAll(this._configValidation.inputSelector)),this.setSubmitButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._setCastomError(t),e.setSubmitButtonState()}))}))}},{key:"_setCastomError",value:function(e){e.validity.valid?this._hideError(e):this._showError(e,e.validationMessage)}},{key:"_setFieldError",value:function(e){this._formSelector.querySelector("#".concat(e.id,"-error")).textContent=e.validationMessage}},{key:"_showError",value:function(e){this._setFieldError(e),e.classList.add(this._configValidation.inputErrorClass)}},{key:"_hideError",value:function(e){this._setFieldError(e),e.classList.remove(this._configValidation.inputErrorClass)}},{key:"setSubmitButtonState",value:function(){this._button=this._formSelector.querySelector(this._configValidation.submitButtonSelector);var e=this._formSelector.checkValidity();e&&(this._button.classList.remove(this._configValidation.inactiveButtonClass),this._button.removeAttribute("disabled")),e||(this._button.classList.add(this._configValidation.inactiveButtonClass),this._button.setAttribute("disabled","disabled"))}}])&&k(t.prototype,n),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var C=function(){function e(t,n,r,o,i,a){var u=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),E(this,"createCard",(function(){return u._element=u._getTemplate(),u._removeButtonDelete(u),u._setEventListeners(),u.setLikeCard(u),u._element.querySelector(".element__img").src=u._link,u._element.querySelector(".element__img").alt=u._name,u._element.querySelector(".element__title").textContent=u._name,u._element})),E(this,"deleteCard",(function(){return u._popupDeleteCard(u)})),E(this,"removeCard",(function(){u._element.remove()})),E(this,"setLikeCard",(function(e){var t=e.likes;t&&(u._likes=t),u._isLiked=u._likes.filter((function(){return u._owner===u._userId})).length>0,u._elementLike.textContent=u._likes.length,u._isLiked?u._elementGroup.classList.add("element__group_active"):u._elementGroup.classList.remove("element__group_active")})),E(this,"hendleCardLike",(function(){return u._hendleCardLike(u)})),this._name=t.name,this._link=t.link,this._cardSelector=n,this._open=r,this._popupDeleteCard=o,this._cardId=t._id,this._owner=t.owner._id,this._userId="b801fba7bd7ef0fa0591f054",this._likes=t.likes,this._myId=t.myId,this._hendleCardLike=i,this._api=a}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._element=document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._elementGroup=this._element.querySelector(".element__group"),this._elementGroup.addEventListener("click",this.hendleCardLike),this._element.querySelector(".element__img").addEventListener("click",(function(){e._open()})),this._element.querySelector(".element__delete").addEventListener("click",this.deleteCard),this._elementLike=this._element.querySelector(".element__like_number")}},{key:"_removeButtonDelete",value:function(){this._owner!==this._userId&&(this._element.querySelector(".element__delete").style.display="none")}},{key:"isLiked",value:function(){var e=this;return!!this._likes.find((function(t){return t._id===e._userId}))}},{key:"cardId",value:function(){return this._cardId}}])&&w(t.prototype,n),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._sectionElement=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._sectionElement.prepend(e)}}])&&O(t.prototype,n),e}();function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()}))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}}])&&j(t.prototype,n),e}();function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t,n){return(T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function R(e,t){return(R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function x(e,t){return!t||"object"!==I(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function B(e){return(B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&R(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupCardImage=t._popup.querySelector(".popup__img"),t._captionImage=t._popup.querySelector(".popup__title"),t}return t=a,(n=[{key:"open",value:function(e,t){T(B(a.prototype),"open",this).call(this),this._popupCardImage.alt=e,this._captionImage.textContent=e,this._popupCardImage.src=t}}])&&q(t.prototype,n),a}(P);function A(e){return(A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(e,t,n){return(D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function N(e,t){return(N=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function F(e,t){return!t||"object"!==A(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function J(e){return(J=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var G=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&N(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=J(r);if(o){var n=J(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return F(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._saveNewCard=t,n._buttonSubmit=n._popup.querySelector(".form__button"),n}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;D(J(a.prototype),"setEventListeners",this).call(this,this._popup),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._saveNewCard(e._getInputValues())}))}},{key:"close",value:function(){D(J(a.prototype),"close",this).call(this,this._popup),this._popup.querySelector(".form").reset()}},{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._popup.querySelectorAll(".form__input"),this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setButtonText",value:function(e){this._buttonSubmit.textContent=e?"Сохранение...":"Сохранить"}}])&&V(t.prototype,n),a}(P);function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var H=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=t,this._profileJob=n,this._profileAvatar=r,this.name="",this.about="",this.avatar=""}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,about:this._profileJob.textContent}}},{key:"getUserAvatar",value:function(){return{avatar:this._profileAvatar.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this.name=t,this.about=n,this.avatar=r}},{key:"updataUserInfo",value:function(){this._profileName.textContent=this.name,this._profileJob.textContent=this.about}},{key:"updataUserAvatar",value:function(){this._profileAvatar.src=this.avatar}}])&&M(t.prototype,n),e}();function W(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=function(){function e(t){var n,r,o=t.url,i=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))},(n="_handleResponse")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this.url=o,this.headers=i}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this.url,"/cards"),{method:"GET",headers:this.headers}).then(this._handleResponse)}},{key:"addTask",value:function(e){return fetch("".concat(this.url,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify(e)}).then(this._handleResponse)}},{key:"deleteTask",value:function(e){return fetch("".concat(this.url,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then(this._handleResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this.url,"/users/me"),{headers:this.headers}).then(this._handleResponse)}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this.url,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t,about:n})}).then(this._handleResponse)}},{key:"setUserAvatar",value:function(e){return fetch("".concat(this.url,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then(this._handleResponse)}},{key:"likeCard",value:function(e,t){return fetch("".concat(this.url,"/cards/likes/").concat(e),{method:t?"DELETE":"PUT",headers:this.headers}).then(this._handleResponse)}}])&&W(t.prototype,n),e}();function Q(e){return(Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function K(e,t,n){return(K="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=ee(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function X(e,t){return(X=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Y(e,t){return!t||"object"!==Q(t)&&"function"!=typeof t?$(e):t}function $(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ee(e){return(ee=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var te=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&X(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ee(r);if(o){var n=ee(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Y(this,e)});function a(e,t){var n,r,o,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),u=function(e){n._handleFormSubmit=e},(o="setFormSubmit")in(r=$(n=i.call(this,e)))?Object.defineProperty(r,o,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[o]=u,n._handleFormSubmit=t,n._buttonSubmit=n._popup.querySelector(".form__button"),n}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e)})),K(ee(a.prototype),"setEventListeners",this).call(this)}},{key:"setButtonText",value:function(e){this._buttonSubmit.textContent=e?"Удаление...":"Да"}}])&&Z(t.prototype,n),a}(P),ne=new z({url:"https://mesto.nomoreparties.co/v1/cohort-26",headers:{authorization:"4187936b-f13d-40c6-aac3-45e4140019db","Content-Type":"application/json"}});ne.getInitialCards().then((function(e){new L({items:e.reverse(),renderer:ae},y,ne).renderItems()})).catch((function(){console.log("Что-то сломалось!")}));var re=new G(_,(function(e){ne.addTask({name:e.title,link:e.link}).then((function(e){re.setButtonText(!0),ae(e)})).catch((function(){console.log("Что-то сломалось!")})).finally((function(){re.setButtonText(!1),re.close(_)}))})),oe=new L({items:t.initialCards,renderer:ae},y),ie=new U(m);function ae(e){var t=new C(e,v,(function(){ie.open(e.name,e.link)}),se,ue,ne).createCard();oe.addItem(t)}function ue(e){ne.likeCard(e.cardId(),e.isLiked()).then((function(t){e.setLikeCard(t)})).catch((function(){console.log("Что-то сломалось!")}))}var ce=new te(a,se);function se(e){ce.open(),ce.setFormSubmit((function(){ne.deleteTask(e._cardId).then((function(){ce.setButtonText(!0),e.removeCard()})).catch((function(){console.log("Что-то сломалось!")})).finally((function(){ce.setButtonText(!1),ce.close(a)}))}))}ce.setEventListeners();var le=new H(c,s,g),fe=new G(f,(function(e){var t=e.name,n=e.about;ne.setUserInfo({name:t,about:n}).then((function(e){var t=e.name,n=e.about;fe.setButtonText(!0),le.setUserInfo({name:t,about:n}),le.updataUserInfo()})).catch((function(){console.log("Что-то сломалось!")})).finally((function(){fe.setButtonText(!1),fe.close(f)}))}));ne.getUserInfo().then((function(e){var t=e.name,n=e.about,r=e.avatar;le.setUserInfo({name:t,about:n}),le.updataUserInfo(),le.setUserInfo({avatar:r}),le.updataUserAvatar()})).catch((function(){console.log("Что-то сломалось!")}));var pe=new G(u,(function(e){le.setUserInfo(e),ne.setUserAvatar(e).then((function(e){pe.setButtonText(!0),le.setUserInfo(e),le.updataUserAvatar()})).catch((function(){console.log("Что-то сломалось!")})).finally((function(){pe.setButtonText(!1),pe.close(u)}))}));new S(n,r).enableValidation(),new S(n,o).enableValidation();var he=new S(n,i);he.enableValidation(),l.addEventListener("click",(function(){var e=le.getUserInfo();p.value=e.name,h.value=e.about,fe.open()})),d.addEventListener("click",(function(){he.setSubmitButtonState(),re.open(_)})),document.querySelector(".profile__redact-img").addEventListener("click",(function(){var e=le.getUserAvatar();b.value=e.avatar,pe.open(u)})),re.setEventListeners(_),ie.setEventListeners(m),fe.setEventListeners(f),pe.setEventListeners(u),ce.setEventListeners(a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,